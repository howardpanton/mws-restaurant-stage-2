"use strict";var restaurants=void 0,neighborhoods=void 0,cuisines=void 0,map=void 0,markers=[];document.addEventListener("DOMContentLoaded",function(e){console.log("test"),DBHelper.onWindowResize(),updateRestaurants(),fetchNeighborhoods(),fetchCuisines(),registerSW()}),window.addEventListener("resize",function(e){DBHelper.onWindowResize()},!1),window.addEventListener("loaded",function(e){var n=document.querySelectorAll(".restaurant-item"),t=0,o=!0,r=!1,s=void 0;try{for(var a,i=n.entries()[Symbol.iterator]();!(o=(a=i.next()).done);o=!0){var d=a.value,l=ImageHelper.lazyLoadImages(e.detail[t]),u=d[1].childNodes[1];d[1].removeChild(u),d[1].insertAdjacentHTML("beforeend",l),t++}}catch(e){r=!0,s=e}finally{try{!o&&i.return&&i.return()}finally{if(r)throw s}}},!1);var fetchNeighborhoods=function(){DBHelper.fetchNeighborhoods(function(e,n){e?console.error(e):(self.neighborhoods=n,fillNeighborhoodsHTML())})},fillNeighborhoodsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,t=document.getElementById("neighborhoods-select");e.forEach(function(e){var n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})},fetchCuisines=function(){DBHelper.fetchCuisines(function(e,n){e?console.error(e):(self.cuisines=n,fillCuisinesHTML())})},fillCuisinesHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,t=document.getElementById("cuisines-select");e.forEach(function(e){var n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})},updateRestaurants=function(){console.log("running");var e=document.getElementById("cuisines-select"),n=document.getElementById("neighborhoods-select"),t=e.selectedIndex,o=n.selectedIndex,r=e[t].value,s=n[o].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(r,s,function(e,n){e?console.error(e,"error"):(console.log("get restaurants"),resetRestaurants(n),fillRestaurantsHTML())})},resetRestaurants=function(e){self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,n=new CustomEvent("loaded",{detail:e}),t=document.getElementById("restaurants-list");e.forEach(function(e){t.insertAdjacentHTML("beforeend",createRestaurantHTML(e))}),addMarkersToMap(),window.setTimeout(function(){window.dispatchEvent(n)},3e3)},createRestaurantHTML=function(e){var n=e.name.replace(/\s+/g,"-").toLowerCase();return'\n    <li class="restaurant-item">\n      <div class="loading-ball">\n        <div></div>\n      </div>\n      <h3 id="name-'+n+'">'+e.name+'</h3>\n      <p id="neighborhood-'+n+'">'+e.neighborhood+'</p>\n      <p id="address-'+n+'">'+e.address+'</p>\n      <a aria-labelledby="name-'+n+" neighborhood-"+n+" address-"+n+'"\n        href="'+DBHelper.urlForRestaurant(e)+'">View Details</a>\n    </li>\n  '},addMarkersToMap=function(){(0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var n=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(n,"click",function(){window.location.href=n.url}),self.markers.push(n)}),google.maps.event.addListener(map,"tilesloaded",function(e){document.querySelectorAll("#map *").forEach(function(e){e.setAttribute("tabindex","-1")})},!1)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
